#cover {
  overflow-x: clip;
  height: 100vh;
  position: relative;
  display: grid;
  place-items: center;
  --slices: 15;
  --modifier: 15;
  --time-modifier: 15s;
  .cover-content{
    position: relative;
    z-index: 3;
  }
  &::after{
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.7;
    background-image: radial-gradient(var(--bg-dark), var(--bg-transparent) 30%);
    z-index: 2;
  }
  .cover-layer-wrapper {
    perspective: 50px;
    position: absolute;
    inset: 0;
    width: 100vw;
    height: 100vh;
    transform-style: preserve-3d;
    transform:translate3d(0,0,0);
    backface-visibility: hidden;
    
    .cover-layer {
      width: 401px;
      height: 284px;
      position: absolute;
      top: 50%;
      left: 50%;
      transform-origin: center;
      

      svg {
        position: absolute;
        transform-origin: center;
        width: 100%;
        z-index: 1;

        
      }
      


    }
    .cover-layer-shadow{
      position: absolute;
      width: 100%;
      height: 100%;
      z-index: 1;
      inset: 0;
      background-image: radial-gradient(var(--bg-dark), var(--bg-shadow));
      //background-color: var(--bg-shadow);
    }

    @for $i from 1 through 15 {


      #mask-#{$i} {

        --initial-scale: calc(0.05 + (#{$i} * #{$i} / (var(--slices) * 3)));
        --scale-start: calc(0.05 + (1 * 1 / (var(--slices) * 3)));
        --scale-end: calc(0.05 + (var(--slices) * var(--slices) / (var(--slices) * 3)));

        --animation-duration: calc(var(--slices) * var(--time-modifier));
        --animation-delay: calc((var(--slices) * var(--time-modifier)) - (#{$i} * var(--time-modifier)));
        transform-style: preserve-3d;
        backface-visibility: hidden;
        opacity: 0;
        will-change: transform, opacity, filter;
        animation: cover-svgs-transform var(--animation-duration) linear  var(--animation-delay) infinite;


        svg{
  
          transform-style: preserve-3d;
          backface-visibility: hidden;
      
        }
        &:before{
          content: '';
          position: absolute;
          width: 100%;
          height: 100%;
          z-index: 0;
          inset: 0;
          //background-color: var(--bg-shadow);
          background-image: radial-gradient(var(--bg-transparent), var(--bg-dark));
          
        
        }
      
      }
    }
  }
}

@keyframes cover-svgs-transform {
  0% {
    transform: translate3d(-50%, -50%, 0px) scale(0.25) rotate(600deg);
    opacity: 0;
    filter: blur(0.25rem);
  }
  5%{
    opacity: 1;
    
  }
  80% {
    filter: blur(0);
  }
  90% {
    filter: blur(0);
    transform: translate3d(-50%, -50%, 40px) scale(2) rotate(0deg);
  }
  
  98% {
    opacity: 1;
    
  }
  
  99% {
    opacity: 0;
    filter: blur(0.025rem);

  }

  100% {
    transform: translate3d(-50%, -50%, 45px) scale(2.2) rotate(-60deg);
    opacity: 0;
    filter: blur(0.07rem);
  }
}

@keyframes cover-layer-opacity {
  0% {
    transform: translateZ(1px);
    opacity: 1;
  }

  95% {
    opacity: 0;
  }

  100% {
    transform: translateZ(41px);
    opacity: 0;
    
  }
}
@keyframes cover-path-blur {
  0% {
    filter: blur(0);
  }
  70% {
    filter: blur(0);
  }
  100% {
    filter: blur(0.125rem);
  }
}