#cover {
  overflow-x: clip;
  height: 100vh;
  position: absolute;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 0;
  
  --slices: 8;
  --modifier: 15;
  --time-modifier: 15s;
  --animation-duration: calc(var(--slices) * var(--time-modifier));
  --clip: path('');

  
  // &::after{
  //   content: '';
  //   display: block;
  //   position: absolute;
  //   top: 0;
  //   left: 0;
  //   width: 100%;
  //   height: 100%;
  //   opacity: 0.7;
  //   background-image: radial-gradient(var(--bg-dark), var(--bg-transparent) 30%);
  //   z-index: 2;
  // }
  
  .cover-layer-wrapper {
    //perspective: 230px;
    position: absolute;
    z-index: -1;
    inset: 0;
    width: 55vmax;
    height: 55vmax;
    //transform-style: preserve-3d;
    top: 50%;
    left: 50%;
    transform: translate(-40%, -50%);
    isolation: isolate;
    //backface-visibility: hidden;
    //will-change: transform;
    //animation: wrapper-rotation var(--animation-duration) linear  infinite;
    @media (orientation: portrait) {
      
      transform: translate(-50%, -50%) rotate(90deg);
    }
    .cover-layer {
      
      position: absolute;
      inset: 0;
      transform-origin: center;
      //transform-style: preserve-3d;
      backface-visibility: hidden;
      opacity: 1;
      contain: paint;
      will-change: transform, opacity;
      

      .cover-layer-mask{
        position: absolute;
        width: 100%;
        height: 100%;
        background-color: var(--bg-light);
        inset: 0;
        z-index: 1;
        shape-rendering: geometricPrecision;
        
        
        
      }
      .cover-layer-shadow{
        
        
        position: absolute;
        width: 98%;
        height: 98%;
        z-index: 0;
        inset: 1%;
        border-radius: 50%;
        //opacity: 0.2;
        mix-blend-mode: multiply;
        background-color: var(--black-glass);
        //background-image: radial-gradient(var(--bg-dark), var(--bg-transparent) 10%, var(--bg-dark) 40%);
        
      
      }
      // &:after{
      //   content: '';
        
      //   position: absolute;
      //   width: 101%;
      //   height: 101%;
      //   z-index: 2;
      //   inset: -1%;
      //   border-radius: 50%;
        
      //   background-image: radial-gradient(transparent 60%, var(--bg-light) 90%);
        
        
      
      // }
      


    }
    // .cover-layer-shadow{
    //   position: absolute;
    //   width: 90%;
    //   height: 90%;
    //   z-index: 1;
    //   inset: 10px;
    //   background-image: radial-gradient(var(--bg-dark), var(--bg-shadow));
      
    //   //background-color: var(--bg-shadow);
    // }

    @for $i from 2 through 9 {

      #mask-#{$i} {

        --initial-scale: #{$i - 0.75};
        --initial-rotation: calc((180 - ((180 * #{$i}) / var(--slices))) * 1deg);
        --initial-translateZ: calc(((30 * var(--slices)) - (#{$i} * 30)) * 1px);
        --clip: url(#maskpath-#{$i});
        --starting-Z: calc(#{$i} * 10px);
        --starting-opacity: calc( 1 - (1 / (#{$i} * 0.5)));
        //--animation-delay: calc(120s - ((var(--slices) * var(--time-modifier)) - (#{$i} * var(--time-modifier))));
        --delay: #{2 - 0.25 * $i}s;
        --duration: calc(5s - #{3 - 0.05 * $i}s);
        transform: scale(var(--initial-scale), var(--initial-scale)) rotate(var(--initial-rotation));
        opacity: 1;
        
        //transform: translateZ(var(--starting-Z)) rotate(360deg);
        //animation: start-cover-svgs-transform var(--animation-delay) linear 0s ,cover-svgs-transform var(--animation-duration) linear  var(--animation-delay) infinite;
        //animation: new-start-cover-animation var(--duration) linear var(--delay);
        
      
      }
      .cover-layer-mask{
        
        clip-path: var(--clip);
      }
    }
  }
}
.cover-overlay{
  
  position: fixed;
  inset: 0;
  z-index: 99;
  background-image: radial-gradient(var(--bg-transparent) 45%, var(--bg-dark) 80%);
  pointer-events: none;
  
  
}
.cover-shade{
  
  position: fixed;
  inset: 0;
  background-image: linear-gradient(45deg, var(--pink-00) , var(--pink-03));
  pointer-events: none;
  mix-blend-mode: color;
  animation: fade-in 1s linear 0s forwards;
}
